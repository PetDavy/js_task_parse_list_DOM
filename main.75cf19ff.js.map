{"version":3,"sources":["scripts/main.js"],"names":["peopleList","document","querySelectorAll","getPersonSalary","person","Number","dataset","salary","replace","sortList","list","sort","personA","personB","personASalary","personBSalary","before","getEmployees","employeesList","map","name","innerText","position","age"],"mappings":";AAAA,aAmCA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAjCA,IAAMA,EAAaC,SAASC,iBAAiB,MAEvCC,EAAkB,SAAAC,GACfC,OAAAA,OAAOD,EAAOE,QAAQC,OAAOC,QAAQ,QAAS,MAGvD,SAASC,EAASC,GACZA,EAAAA,GAAMC,KAAK,SAACC,EAASC,GACjBC,IAAAA,EAAgBX,EAAgBS,GAChCG,EAAgBZ,EAAgBU,GAM/BC,OAJHA,EAAgBC,GAClBF,EAAQG,OAAOJ,GAGVE,EAAgBC,IAI3B,SAASE,EAAaP,GAUbQ,OATe,EAAIR,GAAMS,IAAI,SAAAf,GAC3B,MAAA,CACLgB,KAAMhB,EAAOiB,UACbC,SAAUlB,EAAOE,QAAQgB,SACzBf,OAAQH,EAAOE,QAAQC,OACvBgB,IAAKnB,EAAOE,QAAQiB,OAO1Bd,EAAST,GACTiB,EAAajB","file":"main.75cf19ff.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst peopleList = document.querySelectorAll('li');\n\nconst getPersonSalary = person => {\n  return Number(person.dataset.salary.replace(/[$,]/g, ''));\n};\n\nfunction sortList(list) {\n  [...list].sort((personA, personB) => {\n    const personASalary = getPersonSalary(personA);\n    const personBSalary = getPersonSalary(personB);\n\n    if (personASalary > personBSalary) {\n      personB.before(personA);\n    }\n\n    return personASalary - personBSalary;\n  });\n}\n\nfunction getEmployees(list) {\n  const employeesList = [...list].map(person => {\n    return {\n      name: person.innerText,\n      position: person.dataset.position,\n      salary: person.dataset.salary,\n      age: person.dataset.age,\n    };\n  });\n\n  return employeesList;\n}\n\nsortList(peopleList);\ngetEmployees(peopleList);\n"]}